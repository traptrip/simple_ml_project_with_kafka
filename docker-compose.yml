version: '3.8'

services:
  test:
    build:
      context: .
      args: 
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_HOST=${DB_HOST}
        - DB_PORT=${DB_PORT}
        - DB_NAME=${DB_NAME}
        - ANSIBLE_PASSWD=${ANSIBLE_PASSWD}
        - KAFKAHOST=${KAFKAHOST}
        - KAFKAPORT=${KAFKAPORT}
    image: pythondestroyer/simple_ml_project_with_kafka:main
    command: bash -c "sleep 10s && pytest" # --skip-slow # remove skip-slow if want to test training phase too
    volumes: 
      - ./data/:/app/data
      - ./runs:/app/runs
    environment:
      - ANSIBLE_PASSWD=${ANSIBLE_PASSWD}
    depends_on:
      - mongo
      - kafka

  mongo:
    image: mongo:6.0.6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}

  zookeeper:
      image: confluentinc/cp-zookeeper:7.3.2
      container_name: zookeeper
      environment:
          ZOOKEEPER_CLIENT_PORT: 2181     
   
  kafka:
      image: confluentinc/cp-kafka:7.3.2
      container_name: kafka
      environment:
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
          KAFKA_LISTENERS: INTERNAL://:${KAFKAPORT}
          KAFKA_ADVERTISED_LISTENERS: INTERNAL://${KAFKAHOST}:${KAFKAPORT}
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      depends_on:
        - zookeeper


  kafka-topics-generator:
      image: confluentinc/cp-kafka:7.3.2
      container_name: kafka-topics-generator
      depends_on:
          - kafka
      command: >
          bash -c
            "sleep 5s &&
            kafka-topics --create --topic=kafka-predictions --if-not-exists --bootstrap-server=${KAFKAHOST}:${KAFKAPORT}"
  